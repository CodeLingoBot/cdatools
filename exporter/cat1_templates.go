// Generated by ego.
// DO NOT EDIT

package exporter
import (
"fmt"
"html"
"io"
"github.com/projectcypress/cdatools/models"
"github.com/pborman/uuid"
"time"
"bytes"
)
var _ = fmt.Sprint("") // just so that we can keep the fmt import for now
//line exporter/templates/_addresses.ego:1
 func AddressTmpl(w io.Writer, address *models.Address) error  {
//line exporter/templates/_addresses.ego:2
_, _ = io.WriteString(w, "\n<addr use=\"")
//line exporter/templates/_addresses.ego:2
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  address.Use )))
//line exporter/templates/_addresses.ego:2
_, _ = io.WriteString(w, "\">\n    ")
//line exporter/templates/_addresses.ego:3
 for _, street := range address.Street { 
//line exporter/templates/_addresses.ego:3
_, _ = io.WriteString(w, "<streetAddressLine>")
//line exporter/templates/_addresses.ego:3
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  street )))
//line exporter/templates/_addresses.ego:3
_, _ = io.WriteString(w, "</streetAddressLine>")
//line exporter/templates/_addresses.ego:3
 } 
//line exporter/templates/_addresses.ego:4
_, _ = io.WriteString(w, "\n    <city>")
//line exporter/templates/_addresses.ego:4
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  address.City )))
//line exporter/templates/_addresses.ego:4
_, _ = io.WriteString(w, "</city>\n    <state>")
//line exporter/templates/_addresses.ego:5
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  address.State )))
//line exporter/templates/_addresses.ego:5
_, _ = io.WriteString(w, "</state>\n    <postalCode>")
//line exporter/templates/_addresses.ego:6
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  address.Zip )))
//line exporter/templates/_addresses.ego:6
_, _ = io.WriteString(w, "</postalCode>\n    <country>")
//line exporter/templates/_addresses.ego:7
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  address.Country )))
//line exporter/templates/_addresses.ego:7
_, _ = io.WriteString(w, "</country>\n</addr>\n")
return nil
}
//line exporter/templates/_author.ego:1
 func AuthorTmpl(w io.Writer, author *models.Author) error  {
//line exporter/templates/_author.ego:2
_, _ = io.WriteString(w, "\n\n<!-- SHALL have 1..* author. MAY be device or person.\n    The author of the CDA document in this example is a device at a data submission vendor/registry. -->\n<author>\n  <time value=\"")
//line exporter/templates/_author.ego:6
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  author.Time )))
//line exporter/templates/_author.ego:6
_, _ = io.WriteString(w, "\" />\n  <assignedAuthor>\n  ")
//line exporter/templates/_author.ego:8
 var buffer bytes.Buffer
  for _, id := range author.Ids {
    IdTmpl(&buffer, &id)
  }
  for _, address := range author.Addresses {
    AddressTmpl(&buffer, &address)
  }
  for _, telecom := range author.Telecoms {
    TelecomTmpl(&buffer, &telecom)
  }


  if (&author.Person != nil) {
    
//line exporter/templates/_author.ego:22
_, _ = io.WriteString(w, "\n    <assignedPerson>\n      <name>\n        <given>")
//line exporter/templates/_author.ego:24
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  author.Person.First )))
//line exporter/templates/_author.ego:24
_, _ = io.WriteString(w, "</given>\n        <family>")
//line exporter/templates/_author.ego:25
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  author.Person.Last )))
//line exporter/templates/_author.ego:25
_, _ = io.WriteString(w, "</family>\n      </name>\n    </assignedPerson>\n  ")
//line exporter/templates/_author.ego:28
 } else if (&author.Device != nil) { 
//line exporter/templates/_author.ego:29
_, _ = io.WriteString(w, "\n    <assignedAuthoringDevice>\n       <manufacturerModelName>")
//line exporter/templates/_author.ego:30
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  author.Device.Model )))
//line exporter/templates/_author.ego:30
_, _ = io.WriteString(w, "</manufacturerModelName>\n       <softwareName>")
//line exporter/templates/_author.ego:31
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  author.Device.Name )))
//line exporter/templates/_author.ego:31
_, _ = io.WriteString(w, "</softwareName>\n     </assignedAuthoringDevice>\n  ")
//line exporter/templates/_author.ego:33
 }

  OrganizationTmpl(&buffer, &author.Organization, "representedOrganization")

  io.WriteString(w, buffer.String()) 
//line exporter/templates/_author.ego:38
_, _ = io.WriteString(w, "\n  </assignedAuthor>\n</author>\n")
return nil
}
//line exporter/templates/_id.ego:1
 func IdTmpl(w io.Writer, identifier *models.ID) error  {
//line exporter/templates/_id.ego:2
_, _ = io.WriteString(w, "\n\n")
//line exporter/templates/_id.ego:3
 if (identifier.Root != "") { 
//line exporter/templates/_id.ego:4
_, _ = io.WriteString(w, "\n  <id root=\"")
//line exporter/templates/_id.ego:4
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  identifier.Root )))
//line exporter/templates/_id.ego:4
_, _ = io.WriteString(w, "\"  extension=\"")
//line exporter/templates/_id.ego:4
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  identifier.Extension )))
//line exporter/templates/_id.ego:4
_, _ = io.WriteString(w, "\" />\n")
//line exporter/templates/_id.ego:5
 } else { 
//line exporter/templates/_id.ego:6
_, _ = io.WriteString(w, "\n  <id extension=\"")
//line exporter/templates/_id.ego:6
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  identifier.Extension )))
//line exporter/templates/_id.ego:6
_, _ = io.WriteString(w, "\" />\n")
//line exporter/templates/_id.ego:7
 } 
//line exporter/templates/_id.ego:8
_, _ = io.WriteString(w, "\n")
return nil
}
//line exporter/templates/_organization.ego:1
 func OrganizationTmpl(w io.Writer, organization *models.Organization, tag_name string) error  {
//line exporter/templates/_organization.ego:2
_, _ = io.WriteString(w, "\n")
//line exporter/templates/_organization.ego:3
_, _ = io.WriteString(w, "\n\n")
//line exporter/templates/_organization.ego:4
_, _ = fmt.Fprintf(w, "%v",  "<" + tag_name + ">" )
//line exporter/templates/_organization.ego:5
_, _ = io.WriteString(w, "\n  <!-- Represents unique registry organization TIN -->\n  ")
//line exporter/templates/_organization.ego:6
 var buffer bytes.Buffer
    for _, id := range organization.Ids {
      IdTmpl(&buffer, &id)
    }
    io.WriteString(w, buffer.String())
    buffer.Reset()
  
//line exporter/templates/_organization.ego:13
_, _ = io.WriteString(w, "\n  <!-- Contains name - specific registry not required-->\n  <name>")
//line exporter/templates/_organization.ego:14
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  organization.Name )))
//line exporter/templates/_organization.ego:14
_, _ = io.WriteString(w, "</name>\n  ")
//line exporter/templates/_organization.ego:15
 for _, telecom := range organization.Telecoms {
    TelecomTmpl(&buffer, &telecom)
  }
  for _, address := range organization.Addresses {
    AddressTmpl(&buffer, &address)
  }
  io.WriteString(w, buffer.String())
  
//line exporter/templates/_organization.ego:23
_, _ = io.WriteString(w, "\n</")
//line exporter/templates/_organization.ego:23
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  tag_name )))
//line exporter/templates/_organization.ego:23
_, _ = io.WriteString(w, ">\n")
return nil
}
//line exporter/templates/_record_target.ego:1
 func RecordTargetTmpl(w io.Writer, patient *models.Record) error  {
//line exporter/templates/_record_target.ego:2
_, _ = io.WriteString(w, "\n\n<recordTarget>\n  <patientRole>\n    ")
//line exporter/templates/_record_target.ego:5
 if (patient.MedicalRecordNumber != "" && patient.MedicalRecordAssigner != "") { 
//line exporter/templates/_record_target.ego:6
_, _ = io.WriteString(w, "\n      ")
//line exporter/templates/_record_target.ego:6
 mrn := models.ID{Root: patient.MedicalRecordNumber, Extension: patient.MedicalRecordAssigner} 
//line exporter/templates/_record_target.ego:7
_, _ = io.WriteString(w, "\n      ")
//line exporter/templates/_record_target.ego:7
 var buffer bytes.Buffer 
//line exporter/templates/_record_target.ego:7
_, _ = io.WriteString(w, " ")
//line exporter/templates/_record_target.ego:7
 IdTmpl(&buffer, &mrn) 
//line exporter/templates/_record_target.ego:7
_, _ = io.WriteString(w, " ")
//line exporter/templates/_record_target.ego:7
 io.WriteString(w, buffer.String()) 
//line exporter/templates/_record_target.ego:8
_, _ = io.WriteString(w, "\n    ")
//line exporter/templates/_record_target.ego:8
 } else { 
//line exporter/templates/_record_target.ego:9
_, _ = io.WriteString(w, "\n      <id extension=\"12345\" root=\"PlaceholderOrganization\" />\n    ")
//line exporter/templates/_record_target.ego:10
 } 
//line exporter/templates/_record_target.ego:11
_, _ = io.WriteString(w, "\n    <addr use=\"HP\">\n      ")
//line exporter/templates/_record_target.ego:12
 if (patient.Addresses != nil) { 
//line exporter/templates/_record_target.ego:13
_, _ = io.WriteString(w, "\n      ")
//line exporter/templates/_record_target.ego:13
 for _, address := range patient.Addresses { 
//line exporter/templates/_record_target.ego:14
_, _ = io.WriteString(w, "\n        ")
//line exporter/templates/_record_target.ego:14
 for _, street := range address.Street { 
//line exporter/templates/_record_target.ego:14
_, _ = io.WriteString(w, "<streetAddressLine>")
//line exporter/templates/_record_target.ego:14
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  street )))
//line exporter/templates/_record_target.ego:14
_, _ = io.WriteString(w, "</streetAddressLine>")
//line exporter/templates/_record_target.ego:14
 } 
//line exporter/templates/_record_target.ego:15
_, _ = io.WriteString(w, "\n        <city>")
//line exporter/templates/_record_target.ego:15
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  address.City )))
//line exporter/templates/_record_target.ego:15
_, _ = io.WriteString(w, "</city>\n        <state>")
//line exporter/templates/_record_target.ego:16
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  address.State )))
//line exporter/templates/_record_target.ego:16
_, _ = io.WriteString(w, "</state>\n        <postalCode>")
//line exporter/templates/_record_target.ego:17
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  address.Zip )))
//line exporter/templates/_record_target.ego:17
_, _ = io.WriteString(w, "</postalCode>\n        <country>")
//line exporter/templates/_record_target.ego:18
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  address.Country )))
//line exporter/templates/_record_target.ego:18
_, _ = io.WriteString(w, "</country>\n      ")
//line exporter/templates/_record_target.ego:19
 } 
//line exporter/templates/_record_target.ego:20
_, _ = io.WriteString(w, "\n      ")
//line exporter/templates/_record_target.ego:20
 } else { 
//line exporter/templates/_record_target.ego:21
_, _ = io.WriteString(w, "\n        <streetAddressLine>202 Burlington Rd.</streetAddressLine>\n        <city>Bedford</city>\n        <state>MA</state>\n        <postalCode>01730</postalCode>\n        <country>US</country>\n      ")
//line exporter/templates/_record_target.ego:26
 } 
//line exporter/templates/_record_target.ego:27
_, _ = io.WriteString(w, "\n    </addr>\n    <telecom use=\"WP\" value=\"tel:+1-781-271-3000\"/>\n    <patient>\n      <name>\n        <given>")
//line exporter/templates/_record_target.ego:31
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  patient.First )))
//line exporter/templates/_record_target.ego:31
_, _ = io.WriteString(w, "</given>\n        <family>")
//line exporter/templates/_record_target.ego:32
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  patient.Last )))
//line exporter/templates/_record_target.ego:32
_, _ = io.WriteString(w, "</family>\n      </name>\n      <administrativeGenderCode code=\"")
//line exporter/templates/_record_target.ego:34
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  patient.Gender )))
//line exporter/templates/_record_target.ego:34
_, _ = io.WriteString(w, "\" codeSystem=\"2.16.840.1.113883.5.1\" codeSystemName=\"HL7 AdministrativeGender\"/>\n      <birthTime value=\"")
//line exporter/templates/_record_target.ego:35
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  patient.Birthdate )))
//line exporter/templates/_record_target.ego:35
_, _ = io.WriteString(w, "\"/>\n      ")
//line exporter/templates/_record_target.ego:36
 if (&patient.Race != nil) { 
//line exporter/templates/_record_target.ego:37
_, _ = io.WriteString(w, "\n        <raceCode code=\"")
//line exporter/templates/_record_target.ego:37
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  patient.Race.Code )))
//line exporter/templates/_record_target.ego:37
_, _ = io.WriteString(w, "\" ")
//line exporter/templates/_record_target.ego:37
 if (patient.Race.Name != "") { 
//line exporter/templates/_record_target.ego:37
_, _ = io.WriteString(w, "displayName=\"")
//line exporter/templates/_record_target.ego:37
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  patient.Race.Name )))
//line exporter/templates/_record_target.ego:37
_, _ = io.WriteString(w, "\"")
//line exporter/templates/_record_target.ego:37
 } 
//line exporter/templates/_record_target.ego:37
_, _ = io.WriteString(w, " codeSystemName=\"CDC Race and Ethnicity\" codeSystem=\"2.16.840.1.113883.6.238\"/>\n      ")
//line exporter/templates/_record_target.ego:38
 }
       if (&patient.Ethnicity != nil) { 
//line exporter/templates/_record_target.ego:40
_, _ = io.WriteString(w, "\n        <ethnicGroupCode code=\"")
//line exporter/templates/_record_target.ego:40
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  patient.Ethnicity.Code )))
//line exporter/templates/_record_target.ego:40
_, _ = io.WriteString(w, "\" ")
//line exporter/templates/_record_target.ego:40
 if (patient.Ethnicity.Name != "") { 
//line exporter/templates/_record_target.ego:40
_, _ = io.WriteString(w, "displayName=\"")
//line exporter/templates/_record_target.ego:40
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  patient.Ethnicity.Name )))
//line exporter/templates/_record_target.ego:40
_, _ = io.WriteString(w, "\"")
//line exporter/templates/_record_target.ego:40
 } 
//line exporter/templates/_record_target.ego:40
_, _ = io.WriteString(w, " codeSystemName=\"CDC Race and Ethnicity\" codeSystem=\"2.16.840.1.113883.6.238\"/>\n      ")
//line exporter/templates/_record_target.ego:41
 }
      var languages []models.Language
       if (patient.Languages == nil) {
         var lang = models.Language{map[string][]string{ "IETF": {"en"} }}
         languages = append(languages, lang)
       } else {
        languages = patient.Languages
      }
      for _, language := range languages { 
//line exporter/templates/_record_target.ego:50
_, _ = io.WriteString(w, "\n        <languageCommunication>\n            <templateId root=\"2.16.840.1.113883.3.88.11.83.2\" assigningAuthorityName=\"HITSP/C83\"/>\n            <templateId root=\"1.3.6.1.4.1.19376.1.5.3.1.2.1\" assigningAuthorityName=\"IHE/PCC\"/>\n            <languageCode code=\"")
//line exporter/templates/_record_target.ego:53
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  language.Codes["IETF"][0] )))
//line exporter/templates/_record_target.ego:53
_, _ = io.WriteString(w, "\"/>\n          </languageCommunication>\n      ")
//line exporter/templates/_record_target.ego:55
 } 
//line exporter/templates/_record_target.ego:56
_, _ = io.WriteString(w, "\n\n    </patient>\n  </patientRole>\n</recordTarget>\n")
return nil
}
//line exporter/templates/_telecom.ego:1
 func TelecomTmpl(w io.Writer, telecom *models.Telecom) error  {
//line exporter/templates/_telecom.ego:2
_, _ = io.WriteString(w, "\n<telecom use=\"")
//line exporter/templates/_telecom.ego:2
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v", telecom.Use)))
//line exporter/templates/_telecom.ego:2
_, _ = io.WriteString(w, "\" value=\"tel:+")
//line exporter/templates/_telecom.ego:2
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v", telecom.Value)))
//line exporter/templates/_telecom.ego:2
_, _ = io.WriteString(w, "\" />\n")
return nil
}
//line exporter/templates/cat1.ego:1
 func Cat1Tmpl(w io.Writer, patient *models.Record, header *models.Header) error  {
//line exporter/templates/cat1.ego:2
_, _ = io.WriteString(w, "\n")
//line exporter/templates/cat1.ego:3
_, _ = io.WriteString(w, "\n")
//line exporter/templates/cat1.ego:4
_, _ = io.WriteString(w, "\n")
//line exporter/templates/cat1.ego:5
_, _ = io.WriteString(w, "\n")
//line exporter/templates/cat1.ego:6
_, _ = io.WriteString(w, "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<ClinicalDocument xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xmlns=\"urn:hl7-org:v3\"\n xmlns:voc=\"urn:hl7-org:v3/voc\"\n xmlns:sdtc=\"urn:hl7-org:sdtc\">\n  <!-- QRDA Header -->\n  <realmCode code=\"US\"/>\n  <typeId root=\"2.16.840.1.113883.1.3\" extension=\"POCD_HD000040\"/>\n  <!-- US Realm Header Template Id -->\n  <templateId root=\"2.16.840.1.113883.10.20.22.1.1\"/>\n  <!-- QRDA templateId -->\n  <templateId root=\"2.16.840.1.113883.10.20.24.1.1\" />\n  <!-- QDM-based QRDA templateId -->\n  <templateId root=\"2.16.840.1.113883.10.20.24.1.2\" />\n  <!-- This is the globally unique identifier for this QRDA document -->\n  <id root=\"")
//line exporter/templates/cat1.ego:21
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  uuid.NewRandom() )))
//line exporter/templates/cat1.ego:21
_, _ = io.WriteString(w, "\"/>\n  <!-- QRDA document type code -->\n  <code code=\"55182-0\" codeSystem=\"2.16.840.1.113883.6.1\" codeSystemName=\"LOINC\" displayName=\"Quality Measure Report\"/>\n  <title>QRDA Incidence Report</title>\n  <!-- This is the document creation time -->\n  <effectiveTime value=\"")
//line exporter/templates/cat1.ego:26
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  time.Now().UTC().Unix() )))
//line exporter/templates/cat1.ego:26
_, _ = io.WriteString(w, "\"/>\n  <confidentialityCode code=\"N\" codeSystem=\"2.16.840.1.113883.5.25\"/>\n  <languageCode code=\"en\"/>\n  <!-- reported patient -->\n  ")
//line exporter/templates/cat1.ego:30
 var buffer bytes.Buffer 
//line exporter/templates/cat1.ego:30
_, _ = io.WriteString(w, " ")
//line exporter/templates/cat1.ego:30
 RecordTargetTmpl(&buffer, patient) 
//line exporter/templates/cat1.ego:30
_, _ = io.WriteString(w, " ")
//line exporter/templates/cat1.ego:30
 io.WriteString(w, buffer.String()) 
//line exporter/templates/cat1.ego:31
_, _ = io.WriteString(w, "\n\n  ")
//line exporter/templates/cat1.ego:32
 if header != nil {
    var buffer bytes.Buffer
    for _, author := range header.Authors {
      AuthorTmpl(&buffer, &author)
    }
    io.WriteString(w, buffer.String())
    
//line exporter/templates/cat1.ego:39
_, _ = io.WriteString(w, "\n    !-- SHALL have 1..* author. MAY be device or person.\n      The author of the CDA document in this example is a device at a data submission vendor/registry. -->\n\n    <!-- The custodian of the CDA document is the same as the legal authenticator in this\n    example and represents the reporting organization. -->\n    <!-- SHALL -->\n    <custodian>\n      <assignedCustodian>\n      ")
//line exporter/templates/cat1.ego:48

        buffer.Reset()
        OrganizationTmpl(&buffer, &header.Custodian.Organization, "representedCustodianOrganization")
        io.WriteString(w, buffer.String())
        
//line exporter/templates/cat1.ego:53
_, _ = io.WriteString(w, "\n      </assignedCustodian>\n    </custodian>\n\n    <!-- The legal authenticator of the CDA document is a single person who is at the\n      same organization as the custodian in this example. This element must be present. -->\n    <!-- SHALL -->\n    <legalAuthenticator>\n      <!-- SHALL -->\n      <time value=\"")
//line exporter/templates/cat1.ego:61
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  header.Authenticator.Time )))
//line exporter/templates/cat1.ego:61
_, _ = io.WriteString(w, "\"/>\n      <!-- SHALL -->\n      <signatureCode code=\"S\"/>\n      <assignedEntity>\n        <!-- SHALL ID -->\n        ")
//line exporter/templates/cat1.ego:66
 buffer.Reset()
          for _, id := range header.Authenticator.Ids {
            IdTmpl(&buffer, &id)
          }
          for _, address := range header.Authenticator.Addresses {
            AddressTmpl(&buffer, &address)
          }
          for _, telecom := range header.Authenticator.Telecoms {
            TelecomTmpl(&buffer, &telecom)
          }
          io.WriteString(w, buffer.String())
        
//line exporter/templates/cat1.ego:78
_, _ = io.WriteString(w, "\n        <assignedPerson>\n          <name>\n             <given>")
//line exporter/templates/cat1.ego:80
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  header.Authenticator.Person.First )))
//line exporter/templates/cat1.ego:80
_, _ = io.WriteString(w, "</given>\n             <family>")
//line exporter/templates/cat1.ego:81
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  header.Authenticator.Person.Last )))
//line exporter/templates/cat1.ego:81
_, _ = io.WriteString(w, "</family>\n          </name>\n       </assignedPerson>\n\n        ")
//line exporter/templates/cat1.ego:85
 buffer.Reset()
        OrganizationTmpl(&buffer, &header.Authenticator.Organization, "representedOrganization")
        io.WriteString(w, buffer.String())
        
//line exporter/templates/cat1.ego:89
_, _ = io.WriteString(w, "\n      </assignedEntity>\n    </legalAuthenticator>\n\n  ")
//line exporter/templates/cat1.ego:92
 } else { 
//line exporter/templates/cat1.ego:93
_, _ = io.WriteString(w, "\n    <author>\n    <time value=\"")
//line exporter/templates/cat1.ego:94
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  time.Now().UTC().Unix() )))
//line exporter/templates/cat1.ego:94
_, _ = io.WriteString(w, "\"/>\n    <assignedAuthor>\n      <!-- id extension=\"Cypress\" root=\"2.16.840.1.113883.19.5\"/ -->\n      <!-- NPI -->\n      <id extension=\"FakeNPI\" root=\"2.16.840.1.113883.4.6\"/>\n      <addr>\n        <streetAddressLine>202 Burlington Rd.</streetAddressLine>\n        <city>Bedford</city>\n        <state>MA</state>\n        <postalCode>01730</postalCode>\n        <country>US</country>\n      </addr>\n      <telecom use=\"WP\" value=\"tel:(781)271-3000\"/>\n      <assignedAuthoringDevice>\n        <manufacturerModelName>Cypress</manufacturerModelName >\n        <softwareName>Cypress</softwareName >\n      </assignedAuthoringDevice >\n    </assignedAuthor>\n  </author>\n  <custodian>\n    <assignedCustodian>\n      <representedCustodianOrganization>\n        <id root=\"2.16.840.1.113883.19.5\"/>\n        <name>Cypress Test Deck</name>\n        <telecom use=\"WP\" value=\"tel:(781)271-3000\"/>\n        <addr>\n          <streetAddressLine>202 Burlington Rd.</streetAddressLine>\n          <city>Bedford</city>\n          <state>MA</state>\n          <postalCode>01730</postalCode>\n          <country>US</country>\n        </addr>\n      </representedCustodianOrganization>\n    </assignedCustodian>\n  </custodian>\n  <legalAuthenticator>\n    <time value=\"")
//line exporter/templates/cat1.ego:130
_, _ = io.WriteString(w, html.EscapeString(fmt.Sprintf("%v",  time.Now().UTC().Unix() )))
//line exporter/templates/cat1.ego:130
_, _ = io.WriteString(w, "\"/>\n    <signatureCode code=\"S\"/>\n    <assignedEntity>\n      <id root=\"bc01a5d1-3a34-4286-82cc-43eb04c972a7\"/>\n      <addr>\n        <streetAddressLine>202 Burlington Rd.</streetAddressLine>\n        <city>Bedford</city>\n        <state>MA</state>\n        <postalCode>01730</postalCode>\n        <country>US</country>\n      </addr>\n      <telecom use=\"WP\" value=\"tel:(781)271-3000\"/>\n      <assignedPerson>\n        <name>\n           <given>Henry</given>\n           <family>Seven</family>\n        </name>\n     </assignedPerson>\n      <representedOrganization>\n        <id root=\"2.16.840.1.113883.19.5\"/>\n        <name>Cypress</name>\n      </representedOrganization>\n    </assignedEntity>\n  </legalAuthenticator>")
//line exporter/templates/cat1.ego:153
 } 
//line exporter/templates/cat1.ego:154
_, _ = io.WriteString(w, "\n\n  <!-- PROVIDERS RENDER HERE -->\n\n  <component>\n    <structuredBody>\n      <!--MEASURES RENDER HERE-->\n      <!--REPORTING PARAMS RENDER HERE-->\n      <!--PATIENT DATA RENDERS HERE-->\n    </structuredBody>\n  </component>\n\n</ClinicalDocument>\n")
return nil
}
